git config --global user.email "email@example.com"	//告知git你的邮箱地址
git config --global user.name "Your Name"			//告知git你的名字
使用git config 命令的 --global参数，用这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。

mkdir	文件名	//创建一个文件夹
cd /目录名称		//改变目录
pwd 			//显示出用户当前工作目录的全路径名
mkdir	目录名称	//建立新目录
git init		//通过该命令将此目录变成Git可以管理的仓库
ls -ah			//列出所有文件，包括以点开头的隐含文件
git add		//告诉git，把文件添加到仓库（仅添加而未确认，可以重复多次使用，添加多个文件）
git commit		//告诉git，将文件提交到仓库（确认添加的文件）
git commit	-m"本次提交说明"		//-m后面输入本次提交的说明
git status		//查看当前仓库状态，仓库内的文件是否被修改
git diff		//git difference查看当修改的内容 
git log 		//显示从最近到最远的提价日志
git log --pretty=oneline			//将提交的日志简化为十六进制	ID编码即显示出commit id。
git reste --hard HEAD^	//回退之前的版本，^符号的数量决定回退之前的第几个版本。
git reset --hard commit id		//输入id的前5位，将版本更新到id对应的版本。commit id 指对应的版本id，可通过git log --pretty=oneline查看。
git reflog		//显示每一次版本记录或操作记录
git checkout --f	//丢弃工作区的修改，若工作区修改后未放置到暂存区，现在，撤销的就是工作区
			//若已将工作区添加到暂存区后，修改了暂存区的内容，现在撤销的就是暂存区
git checkout -- <file>			//对指定的工作区文件进行撤销，注意：<file>指需要撤销的文件名，-- <file>中间有个空格
git reset HEAD <file>			//工作区修改后，同时将修改添加到暂存区，可通过此操作将暂存区的修改撤销掉。<file>指需要撤销的文件名
						//撤销暂存区修改后，在通过git checkout --f 撤销工作区修改

第一次将本地仓库的内容推送到GitHub仓库。
git remote add 本地仓库名 git@github.com:远程仓库名.git
例如：
本地仓库名：learngit
远程仓库名：qingfenwuju/Personal-Project
命令如下：
git remote add learngit git@github.com:qingfenwuju/Personal-Project.git

git push 本地仓库名 本地分支	//将本地库的内容推送给远程
若远程库为空，需要在push后加-u
即 git push -u 本地仓库名 本地分支
例如：
git push -u Personal-Prject master

从远程库拷贝至本地
git clone git@github.com:远程仓库名 远程分支.g

ls 目录名称		//列出指定目录中的文件名和子目录名。
ls -a			//列出所有文件，包括以点开头的隐含文件
ls -1			//按长格式列出文件名，包括文件类型标识、权限、链接数、文件主名
rm <file>		//删除指定文件



